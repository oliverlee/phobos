syntax = "proto3";

message pbSimulation {
    pbSensor sensors = 1;
    pbActuator actuators = 2;

    pbModelStateSpace model = 3;
    float model_v = 4;
    pbModelState state = 5;
    pbModelInput input = 6;
    pbModelAuxiliaryState auxiliary_state = 7;

    pbController controller = 8;

    pbTiming timing = 9;
}

// states are yaw, roll, steer, roll rate, steer rate (5)
message pbModelState {
    repeated float data = 1;
}

// auxiliary states are x, y, rear wheel angle, pitch angle (4)
message pbModelAuxiliaryState {
    repeated float data = 1;
}

// inputs are roll torque, steer torque (2)
message pbModelInput {
    repeated float data = 1;
}

// STM32F4 ADC, DAC are 12-bit
// maximum rear wheel encoder count is 1152
message pbSensor {
    uint32 kistler_measured_torque = 1;
    uint32 kollmorgen_measured_torque = 2;
    uint32 steer_encoder_count = 3;
    uint32 rear_wheel_encoder_count = 4;
}

message pbActuator {
    uint32 kollmorgen_command_torque = 1;
}

// 2x2 matrix
message pbSecondOrderMatrix {
    repeated float data = 1;
}

// 5x5 matrix
message pbStateMatrix {
    repeated float data = 1;
}

// 5x2 matrix
message pbInputMatrix {
    repeated float data = 1;
}

// 2x5 matrix
message pbOutputMatrix {
    repeated float data = 1;
}

// 2x2 matrix
message pbFeedthroughMatrix {
    repeated float data = 1;
}

message pbModelStateSpace {
    pbStateMatrix A = 2;
    pbInputMatrix B = 3;
    pbOutputMatrix C = 4;
    pbFeedthroughMatrix D = 5;
}

message pbTiming {
    uint32 starttime = 1;
    uint32 computation = 2;
}

message pbController {
    pbFeedback feedback = 1;
    pbFeedforward feedforward = 2;
}

message pbFeedback {
    float torque = 1;
    float error = 2;
    float error_integral = 3;
    float error_derivative = 4;
}

message pbFeedforward {
    float torque = 1;
    float acceleration = 2;
}
